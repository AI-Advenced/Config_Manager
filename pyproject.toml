[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "config-manager"
version = "1.0.0"
description = "Professional Python configuration management library with multi-format support"
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
maintainers = [
    {name = "Your Name", email = "your.email@example.com"}
]
license = {text = "MIT"}
readme = "README.md"

keywords = [
    "configuration",
    "config",
    "settings",
    "yaml",
    "json",
    "toml",
    "environment",
    "validation"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
    "Topic :: Utilities"
]
requires-python = ">=3.8"

dependencies = [
    "PyYAML>=6.0",
    "tomli>=1.2.0;python_version<'3.11'",
    "tomli-w>=1.0.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0.0",
    "pytest-cov>=2.0.0",
    "pytest-mock>=3.0.0",
    "black>=21.0.0",
    "isort>=5.0.0",
    "flake8>=3.8.0",
    "mypy>=0.800",
    "pre-commit>=2.0.0"
]

docs = [
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.15.0"
]

validation = [
    "pydantic>=1.8.0"
]

all = [
    "config-manager[dev,docs,validation]"
]

[project.scripts]
config-manager = "config_manager.cli:main"

[project.urls]
"Homepage" = "https://github.com/yourusername/config-manager"
"Repository" = "https://github.com/yourusername/config-manager"
"Documentation" = "https://config-manager.readthedocs.io"
"Bug Reports" = "https://github.com/yourusername/config-manager/issues"
"Source" = "https://github.com/yourusername/config-manager"

[tool.setuptools]
packages = ["config_manager", "config_manager.loaders"]

[tool.setuptools.package-data]
config_manager = ["py.typed"]

# Test configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

# Coverage configuration
[tool.coverage.run]
source = ["config_manager"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "setup.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\\.pyi?$'
extend-exclude = '''
/(
  # directories
  \\.eggs
  | \\.git
  | \\.hg
  | \\.mypy_cache
  | \\.tox
  | \\.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["config_manager"]
skip_glob = ["*/migrations/*"]

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "yaml.*",
    "tomli.*",
    "tomli_w.*"
]
ignore_missing_imports = true

# Flake8 configuration (in setup.cfg format for compatibility)
[tool.flake8]
max-line-length = 88
extend-ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long (handled by black)
    "W503"   # line break before binary operator
]
exclude = [
    ".git",
    "__pycache__",
    ".pytest_cache",
    ".mypy_cache",
    "build",
    "dist",
    ".eggs",
    "*.egg-info"
]